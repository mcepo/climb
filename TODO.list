-- TEST --

TODO: test set at my location tag, then location isn't required before tagging

-- FIXES --

TODO: success message are showed after the post/put/delete request are added to queueu
when no internet conntection is present

TODO: can't set altitude

TODO: too many snackbar messages, reduce them on area fetching

-- FEATURES --

TODO: add notification when work is syncronized

TODO: add install button when service worker updates

TODO: add recently viewed areas feature

-- OFFLINE PRECACHE on button click --

TODO: add store for offline use button, then cache:
  - store for offline use -
  - only for area types: Climbing site, Mountain, Crag
  - areas - all info + trails + images
  - routes - all info + images + pitches
  - images - all info
  - map tiles for that area
    - need area borders for map tiles to load + zoom every second zoom starting from most zoomed
  
  now i am storing everything as the user is surfing

-- OPTIMIZATION --

TODO: right now app data is being stored by the service worker per request
  this produces a lot of over lapping data in the storage, a better solution would be
  to store the vuex store to cache on mutations and remove the service worker cache for app data
  use localForge

 -- ADDING LOCALFORGE FOR STORING OFFLINE DATA --

TODO: add storage service with localForge installed

TODO: store data to storage when it is added to store
  items to add
   - area, route, image(tags), pitches, trails

TODO: add persist action to entityMutation vuex mixin that will add item to store, and store it in indexDB

  PROBLEM ADDING/EDITING/DELETING AREA/ROUTE/PITCH/TAG SHOULD CHANGE THERE VALUE IN INDEXDB

  looks like i will have to create a vuex plugin for this one to work properly


-- BIG MAYBE -- 

TODO: add backend cache for area index, area get, route index?, route get, image tags 
  add static files and serve them directly from nginx without calling php at all

TODO: mapper for network data transfer, lower payload size